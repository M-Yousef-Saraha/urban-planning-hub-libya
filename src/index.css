
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Libya-Inspired Color Palette */
    /* Flag Colors */
    --libya-red: 0 100% 45%; /* #E70013 */
    --libya-black: 0 0% 0%; /* #000000 */
    --libya-white: 0 0% 100%; /* #FFFFFF */
    --libya-green: 142 65% 35%; /* #239E46 */
    --libya-gold: 51 100% 50%; /* #FFD700 */
    
    /* Natural Landscape Colors */
    --desert-sand: 35 30% 25%; /* #57442C */
    --mediterranean-blue: 210 50% 65%; /* #88ACDA */
    --sky-blue: 210 40% 75%; /* #C2D2E3 */
    --pale-blue: 210 35% 80%; /* #AAC1D7 */
    --olive-green: 60 25% 40%; /* #6B6B3A */
    --earth-brown: 25 35% 30%; /* #4A3A2A */
    
    /* Theme Colors */
    --background: 0 0% 100%; /* white */
    --foreground: 0 0% 0%; /* black */

    --card: 0 0% 100%;
    --card-foreground: 0 0% 0%;

    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 0%;

    --primary: 142 65% 35%; /* Libya green */
    --primary-foreground: 0 0% 100%;

    --secondary: 210 40% 95%; /* Light Mediterranean blue */
    --secondary-foreground: 0 0% 0%;

    --muted: 210 35% 90%; /* Pale blue */
    --muted-foreground: 35 30% 25%; /* Desert sand */

    --accent: 0 100% 45%; /* Libya red */
    --accent-foreground: 0 0% 100%;

    --destructive: 0 100% 45%; /* Libya red */
    --destructive-foreground: 0 0% 100%;

    --border: 210 35% 85%; /* Light sky blue */
    --input: 210 35% 85%;
    --ring: 142 65% 35%; /* Libya green */

    --radius: 0.5rem;

    --sidebar-background: 210 40% 98%;
    --sidebar-foreground: 0 0% 0%;
    --sidebar-primary: 142 65% 35%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 210 40% 95%;
    --sidebar-accent-foreground: 0 0% 0%;
    --sidebar-border: 210 35% 85%;
    --sidebar-ring: 142 65% 35%;

    /* Dynamic Header Height System */
    --header-height: 64px;
    --header-spacing: calc(var(--header-height) + 2rem);
  }

  /* .dark variant unused now; keeping comment placeholder for potential theming toggle */
  .dark { }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Cairo', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
}

/* RTL Support */
html[dir="rtl"] {
  direction: rtl;
}

html[dir="rtl"] * {
  text-align: right;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Custom animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInFromTop {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes slideInFromLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInFromRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0,0,0);
  }
  40%, 43% {
    transform: translate3d(0, -30px, 0);
  }
  70% {
    transform: translate3d(0, -15px, 0);
  }
  90% {
    transform: translate3d(0, -4px, 0);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.8s ease-out;
}

.animate-slide-in-top {
  animation: slideInFromTop 0.6s ease-out;
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-slide-in-left {
  animation: slideInFromLeft 0.8s ease-out;
}

.animate-slide-in-right {
  animation: slideInFromRight 0.8s ease-out;
}

.animate-scale-in {
  animation: scaleIn 0.6s ease-out;
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-bounce {
  animation: bounce 1s infinite;
}

/* Libya-Inspired Gradient Backgrounds */
.gradient-libya-primary {
  background: linear-gradient(135deg, hsl(var(--libya-green)) 0%, hsl(var(--olive-green)) 50%, hsl(var(--libya-green)) 100%);
}

.gradient-libya-secondary {
  background: linear-gradient(135deg, hsl(var(--mediterranean-blue)) 0%, hsl(var(--sky-blue)) 50%, hsl(var(--pale-blue)) 100%);
}

.gradient-libya-accent {
  background: linear-gradient(135deg, hsl(var(--libya-red)) 0%, hsl(var(--earth-brown)) 50%, hsl(var(--desert-sand)) 100%);
}

.gradient-libya-landscape {
  background: linear-gradient(135deg, hsl(var(--sky-blue)) 0%, hsl(var(--pale-blue)) 25%, hsl(var(--libya-white)) 50%, hsl(var(--desert-sand)) 75%, hsl(var(--earth-brown)) 100%);
}

.gradient-libya-hero {
  background: linear-gradient(135deg, hsl(var(--libya-green)) 0%, hsl(var(--mediterranean-blue)) 25%, hsl(var(--sky-blue)) 50%, hsl(var(--pale-blue)) 75%, hsl(var(--libya-white)) 100%);
}

.gradient-libya-card {
  background: linear-gradient(135deg, hsl(var(--libya-white)) 0%, hsl(var(--pale-blue)) 50%, hsl(var(--sky-blue)) 100%);
}

.gradient-libya-button {
  background: linear-gradient(135deg, hsl(var(--libya-green)) 0%, hsl(var(--olive-green)) 100%);
}

.gradient-libya-button-hover {
  background: linear-gradient(135deg, hsl(var(--libya-red)) 0%, hsl(var(--earth-brown)) 100%);
}

/* Glassmorphism Effects */
.glass-effect {
  backdrop-filter: blur(16px);
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.glass-card {
  backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
}

.glass-card-dark {
  backdrop-filter: blur(20px);
  background: rgba(0, 0, 0, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.1);
  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
}

.glass-modal {
  backdrop-filter: blur(24px);
  background: rgba(255, 255, 255, 0.25);
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

.glass-overlay {
  backdrop-filter: blur(8px);
  background: rgba(255, 255, 255, 0.1);
}

.glass-button {
  backdrop-filter: blur(16px);
  background: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.3);
  transition: all 0.3s ease;
}

.glass-button:hover {
  background: rgba(255, 255, 255, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.4);
  transform: translateY(-2px);
}

.glass-nav {
  backdrop-filter: blur(20px);
  background: rgba(255, 255, 255, 0.8);
  border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}

/* Micro-animations and Interactive Effects */
.hover-lift {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-8px);
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
}

.hover-scale {
  transition: transform 0.3s ease;
}

.hover-scale:hover {
  transform: scale(1.05);
}

/* Button Micro-animations */
.btn-micro {
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-micro::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.btn-micro:hover::before {
  left: 100%;
}

.btn-micro:active {
  transform: scale(0.98);
}

/* Pulse Animation */
.btn-pulse {
  animation: pulse-glow 2s infinite;
}

@keyframes pulse-glow {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
  }
  50% {
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
}

/* Ripple Effect */
.btn-ripple {
  position: relative;
  overflow: hidden;
}

.btn-ripple::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.btn-ripple:active::after {
  width: 300px;
  height: 300px;
}

/* Icon Animations */
.icon-bounce {
  transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.icon-bounce:hover {
  transform: scale(1.2) rotate(5deg);
}

.icon-wiggle {
  animation: wiggle 0.5s ease-in-out;
}

@keyframes wiggle {
  0%, 100% { transform: rotate(0deg); }
  25% { transform: rotate(5deg); }
  75% { transform: rotate(-5deg); }
}

.icon-spin {
  transition: transform 0.3s ease;
}

.icon-spin:hover {
  transform: rotate(180deg);
}

/* Card Micro-animations */
.card-micro {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
}

.card-micro:hover {
  transform: translateY(-4px) scale(1.02);
  box-shadow: 0 20px 40px -12px rgba(0, 0, 0, 0.15);
}

.card-micro::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.card-micro:hover::before {
  opacity: 1;
}

/* Input Focus Animations */
.input-micro {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
}

.input-micro:focus {
  transform: scale(1.02);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.input-micro::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, #3b82f6, #1d4ed8);
  transition: width 0.3s ease;
}

.input-micro:focus::after {
  width: 100%;
}

/* Loading States */
.loading-shimmer {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* Success/Error Animations */
.success-bounce {
  animation: success-bounce 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes success-bounce {
  0% { transform: scale(0.3); }
  50% { transform: scale(1.05); }
  70% { transform: scale(0.9); }
  100% { transform: scale(1); }
}

.error-shake {
  animation: error-shake 0.5s ease-in-out;
}

@keyframes error-shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

/* Floating Animation */
.float-gentle {
  animation: float-gentle 3s ease-in-out infinite;
}

@keyframes float-gentle {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

/* Libya-Inspired Gradient Animation */
.gradient-animate {
  background: linear-gradient(-45deg, hsl(var(--libya-green)), hsl(var(--mediterranean-blue)), hsl(var(--libya-red)), hsl(var(--olive-green)));
  background-size: 400% 400%;
  animation: gradient-shift 4s ease infinite;
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* Modern card styles */
.modern-card {
  @apply bg-white rounded-2xl shadow-sm border border-gray-100 hover:shadow-xl transition-all duration-300;
}

/* Enhanced typography */
.text-gradient {
  background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Layout System - Header Overlap Prevention */
.page-container {
  padding-top: var(--header-spacing);
  padding-bottom: 2rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

.page-container-no-top {
  padding-bottom: 2rem;
  padding-left: 1rem;
  padding-right: 1rem;
}

/* Utility classes for consistent spacing */
.header-safe-top {
  margin-top: var(--header-height);
}

.header-safe-padding {
  padding-top: var(--header-spacing);
}
